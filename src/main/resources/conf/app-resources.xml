<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	   default-autowire="byName" default-lazy-init="false">

	<!-- component-scan @Component , @Controller , @Service , @Repository  -->

    <context:component-scan base-package="org.gdut.ptg.dao" />
	<context:component-scan base-package="org.gdut.ptg.service" />
	<!-- 监听器 -->
	<context:component-scan base-package="org.gdut.ptg..*.listener" />

    <!--加载配置文件-->
	<bean id="configproperties" 
         class="org.springframework.beans.factory.config.PropertiesFactoryBean">
          <property name="location" value="classpath:/conf/app.properties"/>
    </bean>
     <bean id="propertyConfigurer"  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
         <property name="properties" ref="configproperties"/>
    </bean>
	
	<!--对数据库操作都从这里取jdbcTemplate-->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" >
        	<list>
        		<value>classpath:/org/gdut/ptg/maper/*/*.map.xml</value>
        	</list>
        </property>
	</bean>

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
		<property name="driverClassName" value="${jdbc.driverClassName}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<property name="maxActive" value="${db.maxActive}" />
		<property name="initialSize" value="${db.initialSize}" />
		<property name="maxWait" value="${db.maxWait}" />
		<property name="minIdle" value="${db.minIdle}" />
		<property name="timeBetweenEvictionRunsMillis" value="${db.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${db.minEvictableIdleTimeMillis}" />
		<property name="testWhileIdle" value="${db.testWhileIdle}" />
		<property name="testOnBorrow" value="${db.testOnBorrow}" />
		<property name="testOnReturn" value="${db.testOnReturn}" />
		<!-- <property name="poolPreparedStatements" value="${db.poolPreparedStatements}" /> -->
		<!-- <property name="maxPoolPreparedStatementPerConnectionSize" value="${db.maxPoolPreparedStatementPerConnectionSize}" /> -->
	
	</bean>

    <!-- <bean id="dataSource" class="org.logicalcobwebs.proxool.ProxoolDataSource">  
		<property name="driver" value="${jdbc.driverClassName}"/>
		<property name="driverUrl" value="${jdbc.url}"/>
		<property name="user" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<property name="alias" value="${db.alias}"/>
		<property name="simultaneousBuildThrottle" value="${db.simultaneousBuildThrottle}"/>
		<property name="maximumActiveTime" value="${db.maximumActiveTime}"/>
		<property name="houseKeepingTestSql" value="${db.houseKeepingTestSql}"/>
		<property name="maximumConnectionCount" value="${db.maximumConnectionCount}"/>
		<property name="minimumConnectionCount" value="${db.minimumConnectionCount}"/>
		<property name="delegateProperties" value="characterEncoding=${db.characterEncoding}"/>
	</bean> -->
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<aop:config proxy-target-class="true">
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* org.gdut.ptg.service..*.*(..))"  />
	</aop:config>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
		  	<tx:method name="get*" read-only="true"/>
			<tx:method name="is*" read-only="true"/>
			<tx:method name="find*" read-only="true"/>
			<tx:method name="*" isolation="DEFAULT"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- Spring编程式事务  -->
	<bean id="txTemplate" class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="transactionManager"></property>
        <property name="propagationBehaviorName" value="PROPAGATION_REQUIRED"></property>
    </bean>

	<!-- 文件模版引擎配置 -->
	<bean id="freemarkerConfiguration" class="org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean">
	    <property name="templateLoaderPath" value="classpath:template/" />
	    <property name="defaultEncoding" value="UTF-8"/>
	</bean>
	
	
	<bean id="templateLoader" class="freemarker.cache.StringTemplateLoader"></bean>
	<!-- freemaker引擎 -->
	<bean id="freemarkEngine" class="org.gdut.ptg.util.engine.FreemarkEngine">
		<property name="configuration" ref="freemarkerConfiguration"/>
		
	</bean>
	
	<!--发送邮件配置-->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="${mail.host}" />
		<property name="username" value="${mail.username}" />
		<property name="password" value="${mail.password}" />
		<property name="defaultEncoding" value="${mail.defaultEncoding}" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
			</props>
		</property>
	</bean>

</beans>